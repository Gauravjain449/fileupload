import React, { Component } from 'react';
import { CSVReader } from 'react-papaparse';
import ReactTable from 'react-table'
import 'react-table/react-table.css'
import axios from 'axios';

class FileUploadCSV extends Component {
    constructor(props) {
        super(props);
        this.fileInput = React.createRef();
        this.state = ({
            data: {}
        })
    }

    handleReadCSV = (data) => {
        //console.log(data);
        this.setState({
            data: data.data
        })
    }
    handleSaveDatabase = async (e) => {
        e.preventDefault();

        let chunk_size = 500;
        let arrData = []

        for (let index = 0; index < this.state.data.length; index += chunk_size) {
            arrData.push(this.state.data.slice(index, index + chunk_size));
            // Do something if you want with the group
        }
        console.log(arrData.length)
        for (let i = 0; i < arrData.length; i++) {
            await this.getTitle(arrData[i], i).then((res) => {
                console.log(res);
            })
        }
    }

    getTitle = (data, index) => {
        return new Promise((resolve, reject) => {
            axios({
                method: 'post',
                url: 'http://localhost:5000/addrecords', headers: {},
                data: {
                    foo: data,
                    index: index // This is the body part
                }
            }).then(response => {
                return resolve(response.data)
            })
                .catch(error => {
                    return reject(error.message)
                })
        })
    }


    handleOnError = (err, file, inputElem, reason) => {
        console.log(err);
    }

    handleImportOffer = () => {
        this.fileInput.current.click();
    }

    render() {
        let columns = [];
        let data = [];
        let _records = [];
        if (this.state.data.length > 0) {
            // console.log(this.state.data)
            data = this.state.data.slice(0, 5);
            columns = Object.keys(this.state.data[0]).map((key, id) => {
                return {
                    Header: key,
                    accessor: key
                }
            });





            let d = [];

            d = data.map((key) => {
                columns.map((header) => {
                    d[header.Header] = (key[header.Header])
                });

            });
            console.log(d);
            // console.log(columns);
        }
        return (
            <div>
                <CSVReader
                    onFileLoaded={this.handleReadCSV}
                    inputRef={this.fileInput}
                    style={{ display: 'none' }}
                    onError={this.handleOnError}
                    configOptions={{ header: true /* Header row support */ }}
                />
                <button onClick={this.handleImportOffer}>Import</button>

                {
                    data.length > 0 &&
                    (
                        <div>
                            <br />
                            <div className="container">
                                {columns.map((header, index) => {
                                    // header.Header      
                                    const records = [];
                                    records.push('');
                                    data.map(x => {
                                        if (records.indexOf(x[header.Header]) === -1) {
                                            records.push(x[header.Header])
                                        }
                                    });
                                    records.push('All');
                                    return (<div className="row" key={index}>
                                        <div className="col-sm">
                                            {header.Header}
                                        </div>
                                        <div className="col-sm">
                                            <div className="form-group col-md-8">
                                                <select className="form-control">
                                                    {
                                                        records.length > 0 && records.map((option, i) => {
                                                            return <option key={option} title={option} value={option}>{option}</option>;
                                                        })
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    )

                                })}
                            </div>



                            {/* <ReactTable
                                data={data}
                                columns={columns}
                                defaultPageSize={10}
                                resizable={true}
                                className="table table-stripped"
                            /> */}
                            <button onClick={this.handleSaveDatabase}>Save to Database</button>

                        </div>
                    )
                }
            </div >
        );
    }
}

export default FileUploadCSV;
